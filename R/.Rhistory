install.packages("RWeka")
library(RWeka)
mytext<-c("The United States comprises fifty states.",
"In the United States, each state has its own laws.",
"However, federal law overrides state law in the United States.")
mytext
VCorpus(VectorSource(mytext))
library(RWeka)
mytemp<-VCorpus(VectorSource(mytext))
library(tm)
mytemp<-VCorpus(VectorSource(mytext))
TermDocumentMatrix(mytemp)
library(RWeka)
library(tm)
mytext<-c("The United States comprises fifty states.",
"In the United States, each state has its own laws.",
"However, federal law overrides state law in the United States.")
mytext
mytemp<-VCorpus(VectorSource(mytext))
TermDocumentMatrix(mytemp)
library(RWeka)
library(tm)
mytext<-c("The United States comprises fifty states.",
"In the United States, each state has its own laws.",
"However, federal law overrides state law in the United States.")
mytext
mytemp<-VCorpus(VectorSource(mytext))
#VCorpus(DirSource("경로")) # 폴더에 있는거 읽어오는 경우
ngram.tdm<-TermDocumentMatrix(mytemp)
ngram.tdm
summary(ngram.tdm)
summary(ngram.tdm[[0]])
summary(ngram.tdm[[1]])
inspect(ngram.tdm)
View(ngram.tdm)
View(ngram.tdm[[1]])
class(ngram.tdm)
View(ngram.tdm)
ngram.tdm[["dimnames"]][["Terms"]]
get.ngram(ng)
get.ngram(ngram.tdm)
library(RWeka)
library(tm)
mytext<-c("The United States comprises fifty states.",
"In the United States, each state has its own laws.",
"However, federal law overrides state law in the United States.")
mytext
mytemp<-VCorpus(VectorSource(mytext))
#VCorpus(DirSource("경로")) # 폴더에 있는거 읽어오는 경우
bigramTokenizer<-funtion(x) NGramTokenizer(x, Weka_control(min=2, max=3))
library(RWeka)
library(tm)
mytext<-c("The United States comprises fifty states.",
"In the United States, each state has its own laws.",
"However, federal law overrides state law in the United States.")
mytext
mytemp<-VCorpus(VectorSource(mytext))
#VCorpus(DirSource("경로")) # 폴더에 있는거 읽어오는 경우
bigramTokenizer<-funtion(x) NGramTokenizer(x, Weka_control(2))
library(RWeka)
library(tm)
mytext<-c("The United States comprises fifty states.",
"In the United States, each state has its own laws.",
"However, federal law overrides state law in the United States.")
mytext
mytemp<-VCorpus(VectorSource(mytext))
#VCorpus(DirSource("경로")) # 폴더에 있는거 읽어오는 경우
bigramTokenizer<-funtion(x) NGramTokenizer(x, Weka_control(min=2,max=2))
library(RWeka)
library(tm)
mytext<-c("The United States comprises fifty states.",
"In the United States, each state has its own laws.",
"However, federal law overrides state law in the United States.")
mytext
mytemp<-VCorpus(VectorSource(mytext))
#VCorpus(DirSource("경로")) # 폴더에 있는거 읽어오는 경우
bigramTokenizer<-funtion(x) NGramTokenizer(x, Weka_control(min=2,max=2))
library(RWeka)
library(tm)
mytext<-c("The United States comprises fifty states.",
"In the United States, each state has its own laws.",
"However, federal law overrides state law in the United States.")
mytext
mytemp<-VCorpus(VectorSource(mytext))
#VCorpus(DirSource("경로")) # 폴더에 있는거 읽어오는 경우
bigramTokenizer <- funtion(x) NGramTokenizer(x, Weka_control(min=2,max=2))
ngram.tdm$dimnames$Terms
library(RWeka)
library(tm)
mytext<-c("The United States comprises fifty states.",
"In the United States, each state has its own laws.",
"However, federal law overrides state law in the United States.")
mytext
mytemp<-VCorpus(VectorSource(mytext))
#VCorpus(DirSource("경로")) # 폴더에 있는거 읽어오는 경우
bigramTokenizer<-funtion(x) NGramTokenizer(x, Weka_control(min=2,max=2))
library(RWeka)
library(tm)
mytext<-c("The United States comprises fifty states.",
"In the United States, each state has its own laws.",
"However, federal law overrides state law in the United States.")
mytext
mytemp<-VCorpus(VectorSource(mytext))
#VCorpus(DirSource("경로")) # 폴더에 있는거 읽어오는 경우
bigramTokenizer<-funtion(x){NGramTokenizer(x, Weka_control(min=2,max=2))}
library(RWeka)
library(tm)
mytext<-c("The United States comprises fifty states.",
"In the United States, each state has its own laws.",
"However, federal law overrides state law in the United States.")
mytext
mytemp<-VCorpus(VectorSource(mytext))
#VCorpus(DirSource("경로")) # 폴더에 있는거 읽어오는 경우
bigramTokenizer<-function(x) NGramTokenizer(x, Weka_control(min=2,max=2))
# 토큰이 2개 또는 3개로 나눠지는 n-gram을 생성한다.
ngram.tdm<-TermDocumentMatrix(mytemp,
contol=list(tokenize=bigramTokenizer))
library(RWeka)
library(tm)
mytext<-c("The United States comprises fifty states.",
"In the United States, each state has its own laws.",
"However, federal law overrides state law in the United States.")
mytext
mytemp<-VCorpus(VectorSource(mytext))
#VCorpus(DirSource("경로")) # 폴더에 있는거 읽어오는 경우
bigramTokenizer<-function(x) NGramTokenizer(x, Weka_control(min=2,max=2))
# 토큰이 2개 또는 3개로 나눠지는 n-gram을 생성한다.
ngram.tdm<-TermDocumentMatrix(mytemp,
control=list(tokenize=bigramTokenizer))
#bigram Tokenizer로 토큰화한다. -> 최소2개 최대3개로 나누겠다.
ngram.tdm
ngram
library(RWeka)
library(tm)
mytext<-c("The United States comprises fifty states.",
"In the United States, each state has its own laws.",
"However, federal law overrides state law in the United States.")
mytext
mytemp<-VCorpus(VectorSource(mytext))
#VCorpus(DirSource("경로")) # 폴더에 있는거 읽어오는 경우
bigramTokenizer<-function(x) NGramTokenizer(x, Weka_control(min=2,max=2))
# 토큰이 2개 또는 3개로 나눠지는 n-gram을 생성한다.
ngram.tdm<-TermDocumentMatrix(mytemp,
control=list(tokenize=bigramTokenizer))
#bigram Tokenizer로 토큰화한다. -> 최소2개 최대3개로 나누겠다.
ngram.tdm
ngram.tdm$dimnames$Terms
library(RWeka)
library(tm)
mytext<-c("The United States comprises fifty states.",
"In the United States, each state has its own laws.",
"However, federal law overrides state law in the United States.")
mytext
mytemp<-VCorpus(VectorSource(mytext))
#VCorpus(DirSource("경로")) # 폴더에 있는거 읽어오는 경우
bigramTokenizer<-function(x) NGramTokenizer(x, Weka_control(min=2,max=3))
# 토큰이 2개 또는 3개로 나눠지는 n-gram을 생성한다.
ngram.tdm<-TermDocumentMatrix(mytemp,
control=list(tokenize=bigramTokenizer))
#bigram Tokenizer로 토큰화한다. -> 최소2개 최대3개로 나누겠다.
ngram.tdm
ngram.tdm$dimnames$Terms
inspect(ngram.tdm)
summary(ngram.tdm[[1]])
View(ngram.tdm)
get.ngram(ngram.tdm)
summary(ngram.tdm[[1]])
View(ngram.tdm)
get.ngram(ngram.tdm)
# 행 단위(2번째 요소 1)로 sum을 하면 단어의 개수가 나온다.
apply(ngram.tdm[,], 1, sum)
library(RWeka)
library(tm)
mytext<-c("The United States comprises fifty states.",
"In the United States, each state has its own laws.",
"However, federal law overrides state law in the United States.")
mytext
mytemp<-VCorpus(VectorSource(mytext))
#VCorpus(DirSource("경로")) # 폴더에 있는거 읽어오는 경우
mytemp
library(RWeka)
library(tm)
mytext<-c("The United States comprises fifty states.",
"In the United States, each state has its own laws.",
"However, federal law overrides state law in the United States.")
mytext
mytemp<-VCorpus(VectorSource(mytext))
#VCorpus(DirSource("경로")) # 폴더에 있는거 읽어오는 경우
mytemp
bigramTokenizer<-function(x) NGramTokenizer(x, Weka_control(min=2,max=3))
# 토큰이 2개 또는 3개로 나눠지는 n-gram을 생성한다.
ngram.tdm<-TermDocumentMatrix(mytemp,
control=list(tokenize=bigramTokenizer))
#bigram Tokenizer로 토큰화한다. -> 최소2개 최대3개로 나누겠다.
ngram.tdm
ngram.tdm$dimnames$Terms
# 행 단위(2번째 요소 1)로 sum을 하면 전체문서에서 단어의 개수가 나온다.
apply(ngram.tdm[,], 1, sum)
# 행 단위(2번째 요소 1)로 sum을 하면 전체문서에서 단어의 개수가 나온다.
bigramlist<-apply(ngram.tdm[,], 1, sum)
sort(bigramlist,decreasing = TRUE)
library(rJava)
library(stringr)
library(KoNLP)
library(KoNLP)
library(KoNLP)
library(rJava)
library(stringr)
library(KoNLP)
